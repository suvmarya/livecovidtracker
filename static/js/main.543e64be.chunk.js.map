{"version":3,"sources":["components/covid.js","App.js","reportWebVitals.js","index.js"],"names":["Covid","useState","data","setData","getCovidData","a","fetch","response","json","actualData","console","log","statewise","useEffect","className","style","textAlign","color","Spinner","type","marginBottom","Row","Col","sm","Card","body","CardTitle","tag","CardText","recovered","confirmed","deaths","active","lastupdatedtime","App","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAyEeA,EAtED,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAY,uCAAG,8BAAAC,EAAA,+EAEUC,MAAM,0CAFhB,cAEPC,EAFO,gBAGYA,EAASC,OAHrB,OAGPC,EAHO,OAIbC,QAAQC,IAAIF,EAAWG,UAAU,IACjCT,EAAQM,EAAWG,UAAU,IALhB,kDAObF,QAAQC,IAAR,MAPa,0DAAH,qDAkBlB,OAJAE,qBAAU,WACNT,MACD,IAGC,mCACI,0BAASU,UAAU,iBAAnB,UACI,qBAAIC,MAAO,CAAEC,UAAW,SAAUC,MAAM,QAASH,UAAU,OAA3D,UAAkE,sCAAQ,cAACI,EAAA,EAAD,CAASC,KAAK,OAAOF,MAAM,SAASF,MAAO,CAAEK,aAAc,YAArI,UACA,oBAAIL,MAAO,CAAEC,UAAW,SAAUC,MAAM,QAAxC,0CAEA,eAACI,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACC,EAAA,EAAD,CAAMC,MAAI,EAACR,MAAM,UAAUH,UAAU,qCAArC,UACI,cAACY,EAAA,EAAD,CAAWC,IAAI,KAAf,yBACA,cAACC,EAAA,EAAD,CAAUD,IAAI,KAAd,wBAIR,cAACL,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACC,EAAA,EAAD,CAAMC,MAAI,EAACR,MAAM,UAAUH,UAAU,QAArC,UACI,cAACY,EAAA,EAAD,CAAWC,IAAI,KAAf,6BACA,cAACC,EAAA,EAAD,CAAUD,IAAI,KAAd,SAAoBzB,EAAK2B,iBAGjC,cAACP,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACC,EAAA,EAAD,CAAMC,MAAI,EAACR,MAAM,SAASH,UAAU,QAApC,UACI,cAACY,EAAA,EAAD,CAAWC,IAAI,KAAf,6BACA,cAACC,EAAA,EAAD,CAAUD,IAAI,KAAd,SAAoBzB,EAAK4B,iBAGjC,cAACR,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACC,EAAA,EAAD,CAAMC,MAAI,EAACR,MAAM,OAAOH,UAAU,QAAlC,UACI,cAACY,EAAA,EAAD,CAAWC,IAAI,KAAf,yBACA,cAACC,EAAA,EAAD,CAAUD,IAAI,KAAd,SAAoBzB,EAAK6B,cAGjC,cAACT,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACC,EAAA,EAAD,CAAMC,MAAI,EAACR,MAAM,YAAYH,UAAU,QAAvC,UACI,cAACY,EAAA,EAAD,CAAWC,IAAI,KAAf,0BACA,cAACC,EAAA,EAAD,CAAUD,IAAI,KAAd,SAAoBzB,EAAK8B,cAGjC,cAACV,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACC,EAAA,EAAD,CAAMC,MAAI,EAACR,MAAM,UAAUH,UAAU,QAArC,UACI,cAACY,EAAA,EAAD,CAAWC,IAAI,KAAf,0BACA,cAACC,EAAA,EAAD,CAAUD,IAAI,KAAd,SAAoBzB,EAAK+B,gCCrDtCC,EARH,WACV,OACE,mCACE,cAAC,EAAD,CAAOC,KAAK,yBCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.543e64be.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Card, Spinner , CardTitle, CardText, Row, Col } from 'reactstrap';\r\n\r\nconst Covid = () => {\r\n    const [data, setData] = useState([]);\r\n    const getCovidData = async () => {\r\n        try {\r\n            const response = await fetch(\"https://api.covid19india.org/data.json\");\r\n            const actualData = await response.json();\r\n            console.log(actualData.statewise[0]);\r\n            setData(actualData.statewise[0]);\r\n        } catch (err) {\r\n            console.log(err);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCovidData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <section className='container pt-2' >\r\n                <h1 style={{ textAlign: \"center\", color:\"#fff\"}} className=\"mx-1\"><span>  <Spinner type=\"grow\" color=\"danger\" style={{ marginBottom: \"8px\" }}/></span>Live</h1>\r\n                <h2 style={{ textAlign: \"center\", color:\"#fff\" }}>COVID-19 CORONAVIRUS TRACKER</h2>\r\n\r\n                <Row >\r\n                    <Col sm=\"4\">\r\n                        <Card body color=\"primary\" className=\"mb-3 pb-5 bg-docs-transparent-grid\">\r\n                            <CardTitle tag=\"h5\">OUR COUNTRY</CardTitle>\r\n                            <CardText tag=\"h1\">INDIA</CardText>\r\n\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm=\"4\">\r\n                        <Card body color=\"warning\" className=\" pb-5\">\r\n                            <CardTitle tag=\"h5\">TOTAL RECOVERED</CardTitle>\r\n                            <CardText tag=\"h1\">{data.recovered}</CardText>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm=\"4\">\r\n                        <Card body color=\"danger\" className=\" pb-5\">\r\n                            <CardTitle tag=\"h5\">TOTAL CONFIRMED</CardTitle>\r\n                            <CardText tag=\"h1\">{data.confirmed}</CardText>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm=\"4\">\r\n                        <Card body color=\"info\" className=\" pb-5\">\r\n                            <CardTitle tag=\"h5\">TOTAL DEATH</CardTitle>\r\n                            <CardText tag=\"h1\">{data.deaths}</CardText>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm=\"4\">\r\n                        <Card body color=\"secondary\" className=\" pb-5\">\r\n                            <CardTitle tag=\"h5\">TOTAL ACTIVE</CardTitle>\r\n                            <CardText tag=\"h1\">{data.active}</CardText>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm=\"4\">\r\n                        <Card body color=\"success\" className=\" pb-5\">\r\n                            <CardTitle tag=\"h5\">LAST UPDATED</CardTitle>\r\n                            <CardText tag=\"h2\">{data.lastupdatedtime}</CardText>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </section> \r\n        </>\r\n    )\r\n\r\n}\r\nexport default Covid;","import React from \"react\";\nimport Covid from \"./components/covid\";\n\nconst App = () => {\n  return (\n    <>\n      <Covid href=\"/livecovidtracker\" />\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}